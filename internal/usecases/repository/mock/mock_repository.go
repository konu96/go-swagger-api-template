// Code generated by MockGen. DO NOT EDIT.
// Source: todo_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	entities "github.com/Atplaceinc/atplace_api/internal/domain/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockTodoRepository is a mock of TodoRepository interface.
type MockTodoRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTodoRepositoryMockRecorder
}

// MockTodoRepositoryMockRecorder is the mock recorder for MockTodoRepository.
type MockTodoRepositoryMockRecorder struct {
	mock *MockTodoRepository
}

// NewMockTodoRepository creates a new mock instance.
func NewMockTodoRepository(ctrl *gomock.Controller) *MockTodoRepository {
	mock := &MockTodoRepository{ctrl: ctrl}
	mock.recorder = &MockTodoRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoRepository) EXPECT() *MockTodoRepositoryMockRecorder {
	return m.recorder
}

// FindTodoByIDs mocks base method.
func (m *MockTodoRepository) FindTodoByIDs(ctx context.Context, todoIDs []entities.TodoID) ([]entities.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTodoByIDs", ctx, todoIDs)
	ret0, _ := ret[0].([]entities.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindTodoByIDs indicates an expected call of FindTodoByIDs.
func (mr *MockTodoRepositoryMockRecorder) FindTodoByIDs(ctx, todoIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTodoByIDs", reflect.TypeOf((*MockTodoRepository)(nil).FindTodoByIDs), ctx, todoIDs)
}
